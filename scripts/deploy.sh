#!/bin/bash
set -e
shopt -s histappend

environment_name=stuartle
location=westeurope

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

#
# Perform deployment
#
az deployment sub create \
	--name redirector-demo \
	--location westeurope \
	--template-file infra/main.bicep \
	--parameters environmentName=$environment_name location=$location \
	--output json \
		| jq "[.properties.outputs | to_entries | .[] | {key:.key, value: .value.value}] | from_entries" > "$script_dir/../infra/output.json"

#
# Parse output values
#
web_base_url=$(jq -r '.webBaseUrl' "$script_dir/../infra/output.json")
web_deploy_token=$(jq -r .webDeployToken < $script_dir/../infra/output.json)
api_service_bus_connection_string=$(jq -r .apiServiceBusConnectionString < $script_dir/../infra/output.json)
backend_function_name=$(jq -r .backendFunctionName < $script_dir/../infra/output.json)
backend_function_storage_connection_string=$(jq -r .backendFunctionStorageConnectionString < $script_dir/../infra/output.json)
backend_service_bus_connection_string=$(jq -r .backendServiceBusConnectionString < $script_dir/../infra/output.json)
signalr_connection_string=$(jq -r .signalrConnectionString < $script_dir/../infra/output.json)
app_insights_instrumentation_key=$(jq -r .appInsightsInstrumentationKey < $script_dir/../infra/output.json)
app_insights_connection_string=$(jq -r .appInsightsConnectionString < $script_dir/../infra/output.json)

#
# Create scripts/aliases to generate local.settings.json files
#
mkdir -p $script_dir/.generated/
echo '*' > $script_dir/.generated/.gitignore
api_dir=$(realpath $script_dir/../api)
cat <<EOF2 > $script_dir/.generated/generate_api_local_settings.sh
cat <<EOF > $api_dir/local.settings.json
{
  "IsEncrypted": false,
  "Values": {
    "AzureWebJobsStorage": "",
    "FUNCTIONS_WORKER_RUNTIME": "node",
    "AzureWebJobsServiceBus": "$api_service_bus_connection_string",
    "AzureSignalRConnectionString": "$signalr_connection_string"
  }
}
EOF
EOF2
chmod +x $script_dir/.generated/generate_api_local_settings.sh

backend_dir=$(realpath $script_dir/../back-end)
cat <<EOF2 > $script_dir/.generated/generate_backend_local_settings.sh
cat <<EOF > $backend_dir/local.settings.json
{
  "IsEncrypted": false,
  "Values": {
    "FUNCTIONS_WORKER_RUNTIME": "node",
    "AzureWebJobsStorage": "",
    "AzureWebJobsServiceBus": "$backend_service_bus_connection_string",
    "APPINSIGHTS_INSTRUMENTATIONKEY": "$app_insights_instrumentation_key",
    "APPLICATIONINSIGHTS_CONNECTION_STRING": "$app_insights_connection_string",
    "AzureSignalRConnectionString": "$signalr_connection_string"
  }
}
EOF
EOF2
chmod +x $script_dir/.generated/generate_backend_local_settings.sh

#
# Set up infra/env.sh that can be sourced to load deployment token etc
#
cat <<EOF > $script_dir/../infra/setup-env.sh
# This script is dynamically generated by deploy.sh
# and is intended to be sourced to set up environment variables etc
# for ease of dev/demoing
export SWA_CLI_DEPLOYMENT_TOKEN=$web_deploy_token
alias setup-api-local-settings='$script_dir/.generated/generate_api_local_settings.sh'
alias setup-backend-local-settings='$script_dir/.generated/generate_backend_local_settings.sh'
EOF

#
# Populate history with useful commands for finding with reverse search
#
backend_function_dir=$(realpath $script_dir/../back-end)
history -s "curl http://localhost:4280/test | jq"
history -s "yarn add applicationinsights"
history -s "curl -i $web_base_url/microsoft"
history -s "\$BROWSER $web_base_url/admin"
history -s "swa start"
history -s "swa deploy --env production"
history -s "(cd $backend_function_dir && yarn run build && func azure functionapp publish $backend_function_name)"
infra_dir=$(realpath $script_dir/../infra)
history -s "source $infra_dir/setup-env.sh"

history -w

echo "Completed ðŸš€"
echo "Run 'history -r' to reload history"
echo "Run 'source $infra_dir/setup-env.sh' to set SWA deployment token"

